
package com.bcinfo.umap.ws;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import com.bcinfo.umap.ws.schemas.RequestHeader;
import com.bcinfo.umap.utils.CryptoUtil;
import lombok.extern.slf4j.Slf4j;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.concurrent.atomic.AtomicInteger;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.5.3
 * 2022-07-25T14:45:16.098+08:00
 * Generated source version: 3.5.3
 *
 */
@Slf4j
public final class MessageSender_MessageSender_Client {

    private static final QName SERVICE_NAME = new QName("http://ws.umap.bcinfo.com", "MessageSenderService");

    private static final AtomicInteger atomicInteger = new AtomicInteger();
    static SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");

    private MessageSender_MessageSender_Client() {
    }

    public static RequestHeader getRequestHeader() {
        RequestHeader requestHeader = new RequestHeader();
        requestHeader.setAccessPlatformID("100");
        requestHeader.setDeviceId("2030");
        int index = atomicInteger.getAndIncrement();
        if(index == 99999999){
            atomicInteger.set(0);
        }
        String msgId = requestHeader.getDeviceId() + requestHeader.getAccessPlatformID() + sdf.format(new Date()) + String.format("%08d",index);
        requestHeader.setMsgId(msgId);
        requestHeader.setDevicePwd(CryptoUtil.getMD5String(msgId + "push@2030"));
        return requestHeader;
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = MessageSenderService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        MessageSenderService ss = new MessageSenderService(wsdlURL, SERVICE_NAME);
        MessageSender port = ss.getMessageSender();

//        {
//        System.out.println("Invoking sendSmMessage...");
//        com.bcinfo.umap.ws.schemas.RequestHeader _sendSmMessage_header = null;
//        String _sendSmMessage_sourceAddr = "";
//        java.util.List<String> _sendSmMessage_destMobiles = null;
//        String _sendSmMessage_content = "";
//        com.bcinfo.umap.ws.schemas.Response _sendSmMessage__return = port.sendSmMessage(_sendSmMessage_header, _sendSmMessage_sourceAddr, _sendSmMessage_destMobiles, _sendSmMessage_content);
//        System.out.println("sendSmMessage.result=" + _sendSmMessage__return);
//
//
//        }
        {
        System.out.println("Invoking sendSmTplMessage...");
        com.bcinfo.umap.ws.schemas.RequestHeader _sendSmTplMessage_header = getRequestHeader();
        String _sendSmTplMessage_sourceAddr = "10658830";
        java.util.List<String> _sendSmTplMessage_destMobiles = new ArrayList<>(Arrays.asList("15662735045","19863827065"));
        String _sendSmTplMessage_templetId = "20300001";
        java.util.List<String> _sendSmTplMessage_tplVars = new ArrayList<>(Arrays.asList("对10.0.143.98服务器下/opt/testdir目录进行加密}","123456"));
        log.info("_sendSmTplMessage_header:{}",_sendSmTplMessage_header);
        log.info("_sendSmTplMessage_sourceAddr:{}",_sendSmTplMessage_sourceAddr);
        log.info("_sendSmTplMessage_destMobiles:{}",_sendSmTplMessage_destMobiles);
        log.info("_sendSmTplMessage_templetId:{}",_sendSmTplMessage_templetId);
        log.info("_sendSmTplMessage_tplVars:{}",_sendSmTplMessage_tplVars);
        com.bcinfo.umap.ws.schemas.Response _sendSmTplMessage__return = port.sendSmTplMessage(_sendSmTplMessage_header, _sendSmTplMessage_sourceAddr, _sendSmTplMessage_destMobiles, _sendSmTplMessage_templetId, _sendSmTplMessage_tplVars);
        System.out.println("sendSmTplMessage.result=" + _sendSmTplMessage__return);


        }

        System.exit(0);
    }

}
